#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Packit openwrt to releases

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
    
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  FILE_NAME: openwrt_armvirt
  PRODUCT_NAME: ARMv8-im


jobs:
  build:
    runs-on: Ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id
    
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      id: init
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q) 2>/dev/null
        [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
        sudo swapoff -a
        sudo rm -f /swapfile /mnt/swapfile
        sudo -E apt-get -y update
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -y install $(curl -fsSL https://tinyurl.com/ubuntu2204-make-openwrt)
        sudo -E systemctl daemon-reload
        #sudo -E apt-get -y full-upgrade
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo sed -i '/NVM_DIR/d;/skel/d' /root/{.bashrc,.profile}
        sudo rm -rf ~/{.cargo,.dotnet,.rustup}
        sudo timedatectl set-timezone "${TZ}"
        echo "status=success" >> ${GITHUB_OUTPUT}
          
    #- name: Package Armvirt as OpenWrt
      #uses: ophub/flippy-openwrt-actions@main
      #env:
        #OPENWRT_ARMSR: https://github.com/OldCoding/openwrt_packit_arm/releases/download/ARMv8-le/openwrt-armsr-armv8-generic-rootfs.tar.gz
        #PACKAGE_SOC: s905d_s905x3
        #WHOAMI: Wing
        #KERNEL_AUTO_LATEST: true
        #KERNEL_REPO_URL: OldCoding/openwrt_packit_arm
        #KERNEL_VERSION_NAME: 6.1.y_6.6.y_6.12.y
        #GZIP_IMGS: .gz
        #GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Package OpenWrt Firmware
      run: |
        cd /opt && git clone https://github.com/unifreq/openwrt_packit
        curl -fsSL https://github.com/OldCoding/openwrt_packit_arm/releases/download/ARMv8-le/openwrt-armsr-armv8-generic-rootfs.tar.gz -o openwrt_packit/openwrt-armsr-armv8-generic-rootfs.tar.gz
        cd openwrt_packit && sudo ./mk_s905d_n1.sh


    - name: Calculate MD5
      run: |
        cd /opt/openwrt_packit/output && rm -rf sha256sums
        MD5=$(md5sum * | sed ':a;N;$!ba;s/\n/<br>/g')
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "MD5=$MD5" >> $GITHUB_ENV

    - name: Upload artifact to Actions
      uses: kittaakos/upload-artifact-as-is@master
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        path: /opt/openwrt_packit/output/

    - name: Upload OpenWrt Firmware to Release
      id: release
      uses: ncipollo/release-action@v1
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        name: R${{ env.DATE }} for ${{ env.PRODUCT_NAME }}
        allowUpdates: true
        removeArtifacts: true
        tag: ${{ env.PRODUCT_NAME }}
        commit: main
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: /opt/openwrt_packit/output/*
        body: |
          - 默认IP：192.168.1.1
          - 默认密码：password
          - 当前使用版本:【编译前的最后一次[➦主源码](${{ env.REPO_URL }})更新记录】
          - 固件请使用晶晨宝盒刷入
          - 下载后请仔细校验MD5，如不正确请重新下载
          `md5sum`
          > ${{ env.MD5 }}

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 60
        keep_minimum_runs: 60

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        repo:
        keep_latest: 30
        delete_tag_pattern:
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
