#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build test

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
    
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  FILE_NAME: openwrt_armvirt
  PRODUCT_NAME: ARMv8-le


jobs:
  build:
    runs-on: Ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id
    
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Check server configuration
      run: |
        echo "警告⚠"
        echo "若分配的服务器性能不足，务必及时取消，重新运行！"
        echo "CPU性能：7763 > 8370C > 8171M > 8272CL > E5系列"
        echo -e "-------------- ------------CPU信息------------------------------------------\n"
        echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "-------------------------------内存信息-------------------------------------------"
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo -e "\n"
        echo "-----------------------------硬盘信息---------------------------------------------"
        echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
        echo "硬盘详情："
        df -Th

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap* aspnetcore*
        [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo -E apt update
        sudo -E apt -y install $(curl -fsSL https://is.gd/depends_ubuntu_2204)
        sudo -E apt-get -qq install libfuse-dev
        sudo -E apt -y autoremove --purge
        sudo -E systemctl daemon-reload
        sudo -E apt clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        df -Th

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H<br/>")
        VER=$(grep -E "='R.+" ./package/lean/default-settings/files/zzz-default-settings | cut -f2 -d"'")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "DATE1=$(date "+%Y-%m-%d")" >> $GITHUB_ENV
        echo "VER=$VER" >> $GITHUB_ENV

    - name: File Patch Before
      run: | 

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a && ./scripts/feeds install -a

    - name: Update packages
      env:
        SCKEY: ${{ secrets.ACTIONS_TRIGGER_PAT }}
      run: |
        cd openwrt/package
        git clone --depth 1 https://github.com/zzsj0928/luci-app-pushbot
        git clone --depth 1 https://github.com/gngpp/luci-theme-design
        git clone --depth 1 https://github.com/sbwml/luci-app-alist
        git clone --depth 1 https://github.com/sirpdboy/netspeedtest
        git clone --depth 1 https://github.com/lxl6125/openwrt-qbittorrent-enhanced
        git clone --depth 1 -b 18.06 https://github.com/jerrykuku/luci-app-argon-config
        git clone --depth 1 https://github.com/xiaorouji/openwrt-passwall-packages
        svn export https://github.com/xiaorouji/openwrt-passwall/trunk/luci-app-passwall
        svn export https://github.com/xiaorouji/openwrt-passwall2/trunk/luci-app-passwall2
        svn export https://github.com/kiddin9/openwrt-packages/trunk/luci-app-diskman
        svn export https://github.com/sirpdboy/sirpdboy-package/trunk/luci-app-adguardhome
        svn export https://github.com/Lienol/openwrt-package/trunk/luci-app-filebrowser
        svn export https://github.com/ophub/luci-app-amlogic/trunk/luci-app-amlogic
        svn export https://github.com/gngpp/nas-xunlei/trunk/openwrt
        svn export https://github.com/fw876/helloworld/branches/main
        svn export https://github.com/vernesong/OpenClash/branches/dev/luci-app-openclash

    - name: File Patch After
      run: |
        cd openwrt
        rm -rf feeds/packages/lang/golang
        git clone https://github.com/sbwml/packages_lang_golang -b 21.x feeds/packages/lang/golang
        rm -rf feeds/luci/themes/luci-theme-argon
        git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git ./feeds/luci/themes/luci-theme-argon
        cd package
        sed -i "s/OpenWrt /Wing build $(TZ=UTC-8 date "+%Y.%m.%d") @ OpenWrt /g" lean/default-settings/files/zzz-default-settings
        sed -i "/firewall\.user/d" lean/default-settings/files/zzz-default-settings
        sed -i "s|https.*/amlogic-s9xxx-openwrt|https://github.com/OldCoding/openwrt_packit_arm|g" luci-app-amlogic/root/etc/config/amlogic
        sed -i "s|s9xxx_lede|${{ env.PRODUCT_NAME }}|g" luci-app-amlogic/root/etc/config/amlogic
        chmod 755 ./luci-app-adguardhome/root/etc/init.d/AdGuardHome
        cd ./luci-app-openclash/root/etc/openclash
        CORE_VER=https://github.com/vernesong/OpenClash/raw/core/dev/core_version
        CORE_TUN=https://github.com/vernesong/OpenClash/raw/core/dev/premium/clash-linux-arm64
        CORE_DEV=https://github.com/vernesong/OpenClash/raw/core/dev/dev/clash-linux-arm64.tar.gz
        CORE_MATE=https://github.com/vernesong/OpenClash/raw/core/dev/meta/clash-linux-arm64.tar.gz
        TUN_VER=$(curl -sfL $CORE_VER | sed -n "2{s/\r$//;p;q}")
        curl -sfL -o ./Country.mmdb https://github.com/alecthw/mmdb_china_ip_list/raw/release/Country.mmdb
        curl -sfL -o ./GeoSite.dat https://github.com/Loyalsoldier/v2ray-rules-dat/raw/release/geosite.dat
        curl -sfL -o ./GeoIP.dat https://github.com/Loyalsoldier/v2ray-rules-dat/raw/release/geoip.dat
        mkdir ./core && cd ./core
        curl -sfL -o ./tun.gz "$CORE_TUN"-"$TUN_VER".gz && gzip -d ./tun.gz && mv ./tun ./clash_tun
        curl -sfL -o ./meta.tar.gz "$CORE_MATE" && tar -zxf ./meta.tar.gz && mv ./clash ./clash_meta
        curl -sfL -o ./dev.tar.gz "$CORE_DEV" && tar -zxf ./dev.tar.gz
        chmod +x ./clash* ; rm -rf ./*.gz
        cd $GITHUB_WORKSPACE/openwrt && cd feeds/luci/applications/luci-app-wrtbwmon
        sed -i 's/ selected=\"selected\"//g' ./luasrc/view/wrtbwmon/wrtbwmon.htm && sed -i 's/\"1\"/\"1\" selected=\"selected\"/g' ./luasrc/view/wrtbwmon/wrtbwmon.htm
        sed -i 's/interval: 5/interval: 1/g' ./htdocs/luci-static/wrtbwmon/wrtbwmon.js

    - name: Generate configuration file
      run: |
        cd openwrt
        make defconfig

    - name: Download package
      id: package
      run: |
        cd openwrt 
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Clean up server space
      run: |
        cd openwrt/
        ls . | grep -v "^bin$" | xargs
        rm -rf $(ls . | grep -v "^bin$" | xargs) 2>/dev/null
        df -hT ${PWD}
